addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

const html = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>nanyiの剩余价值计算器</title>
  <link rel="icon" type="image/webp" href="https://img.doggpt.eu.org/file/9a2f0c44eff3151d3e215.png">
  <style>
    body {
      font-family: "微软雅黑", Arial, sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-image: url('https://img.doggpt.eu.org/file/2877f5681105c6184bb9d.jpg');
      background-color: #f5f5f5;
      background-size: cover;;
    }
    .container {
      width: 90%;
      max-width: 500px;
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    h1 {
      color: #333;
      margin-bottom: 20px;
      text-align: center;
    }
    form {
      margin-bottom: 20px;
    }
    .input-container {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
    }
    .input-container label {
      flex: 0 0 150px; /* Adjusted width for alignment */
      min-width: 100px; /* Minimum width for better mobile display */
    }
    .input-container input[type="number"],
    .input-container select,
    .input-container input[type="date"] {
      flex: 1;
      padding: 8px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: #f8f8f8;
    }
    input[type="submit"] {
      padding: 10px 20px;
      font-size: 16px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      width: 100%;
    }
    input[type="submit"]:hover {
      background-color: #45a049;
    }
    .result {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .result p {
      font-size: 18px;
      color: #333;
      margin: 0;
    }
    .result p.label {
      font-weight: bold;
    }

    @media only screen and (max-width: 600px) {
      .container {
        flex-direction: column; 
      }
      .input-container label {
        margin-bottom: 5px; 
      }
      .input-container input[type="number"],
      .input-container select,
      .input-container input[type="date"] {
        width: 100%; 
        margin-bottom: 10px; 
      }
      input[type="submit"] {
        margin-top: 10px; 
      }
    }
    .container {
      margin: -30px auto 20px; 
    }
    .container {
      margin: -40px auto 20px; 
      background-color: rgba(255, 255, 255, 0.8); 
      padding: 20px; 
      border-radius: 8px; 
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); 
    }
    .result {
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>nanyiの剩余价值计算器</h1>
    <form id="valueCalculator">
    <div class="input-container">
    <label for="initialValue">购买金额：</label>
    <input type="number" id="initialValue" name="initialValue" step="0.001" required>
    </div>
      <div class="input-container">
        <label for="currency">货币种类：</label>
        <select id="currency" name="currency" required>
          <option value="USD">美元</option>
          <option value="EUR">欧元</option>
          <option value="CNY">人民币</option>
        </select>
      </div>
      <div class="input-container">
        <label for="paymentPeriod">付款周期：</label>
        <select id="paymentPeriod" name="paymentPeriod" required>
          <option value="monthly">月付</option>
          <option value="quarterly">季付</option>
          <option value="semiannually">半年付</option>
          <option value="annually">年付</option>
          <option value="biennially">两年付</option>
          <option value="triennially">三年付</option>
          <option value="quinquennially">五年付</option>
        </select>
      </div>
      <div class="input-container">
        <label for="purchaseDate">购买日期：</label>
        <input type="date" id="purchaseDate" name="purchaseDate" required>
      </div>
      <div class="input-container">
        <label for="expiryDate">到期时间：</label>
        <input type="date" id="expiryDate" name="expiryDate" required>
      </div>
      <input type="submit" value="计算">
    </form>
    <div class="result" id="result" style="display: none;">
      <p id="remainingValue"></p>
    </div>
  </div>
  <script>
  document.getElementById('valueCalculator').addEventListener('submit', async function(event) {
    event.preventDefault();

    const initialValue = parseFloat(document.getElementById('initialValue').value);
    const currency = document.getElementById('currency').value;
    const paymentPeriod = document.getElementById('paymentPeriod').value;
    const purchaseDate = new Date(document.getElementById('purchaseDate').value);
    const expiryDate = new Date(document.getElementById('expiryDate').value);
    
    const remainingDays = Math.ceil((expiryDate - purchaseDate) / (1000 * 60 * 60 * 24));
    const paymentFrequency = calculatePaymentFrequency(paymentPeriod);
    const remainingValue = calculateRemainingValue(initialValue, remainingDays, paymentFrequency);
    
    const resultElement = document.getElementById('remainingValue');
    resultElement.innerHTML = '<p class="label">剩余价值：' + remainingValue.toFixed(2) + ' ' + currency + '</p>';
    document.getElementById('result').style.display = 'block';
  });

    function calculatePaymentFrequency(paymentPeriod) {
      let frequencyInDays;
      switch (paymentPeriod) {
        case 'monthly':
          frequencyInDays = 30.44; // Average number of days in a month
          break;
        case 'quarterly':
          frequencyInDays = 91.31; // Average number of days in three months
          break;
        case 'semiannually':
          frequencyInDays = 182.62; // Average number of days in six months
          break;
        case 'annually':
          frequencyInDays = 365.25; // Average number of days in a year, accounting for leap years
          break;
        case 'biennially':
          frequencyInDays = 730.5; // Average number of days in two years, accounting for leap years
          break;
        case 'triennially':
          frequencyInDays = 1095.75; // Average number of days in three years, accounting for leap years
          break;
        case 'quinquennially':
          frequencyInDays = 1826.25; // Average number of days in five years, accounting for leap years
          break;
        default:
          frequencyInDays = 365.25; // Default to annual frequency
      }
      return frequencyInDays;
    }
    
    function calculateRemainingValue(initialValue, remainingDays, paymentFrequency) {
      const remainingValue = initialValue * (remainingDays / paymentFrequency);
      return remainingValue;
    }
  </script>
</body>
</html>
`;

async function handleRequest(request) {
  return new Response(html, {
    headers: {
      'Content-Type': 'text/html;charset=UTF-8',
    },
  })
}
